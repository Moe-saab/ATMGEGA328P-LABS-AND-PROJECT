.INCLUDE "m328pdef.inc"
.ORG 0X0000
	RJMP init

init:
;Initialization related to screen
SBI DDRB,3        
CBI PORTB,3       
SBI DDRB,4	     
CBI PORTB,4          
SBI DDRB,5       
CBI PORTB,5  
LDI R17,0X01

main:
;fill the character buffer with what you want to display from the chartable
LDI YH,high(0x0100)
LDI YL,low(0x0100)
LDI R16,0
LDI R19,0X10 ;COUNTER FOR THE 16 BLOCKS
;MAKE LOOP OF 16 TIMES TO FILL THE CHAR BUFFER WITH VALUES 
CHARBUFFERFILLING:
ST Y+,R16
INC R16
DEC R19 
BRNE CHARBUFFERFILLING


SCREEN:
;send column data
;init charbuffer pointer
LDI YH,high(0x110)
LDI YL,low(0x110)
LDI R18,16
;code for 1 block
BlockLoop:
;calculate offset in table depending on charvalue
LD R20,-Y
LDI ZH,high(Chartable<<1)
LDI ZL,low(Chartable<<1)
LDI R21,8
MUL R20,R21
ADD ZL,R0
;now we still have offset of row +(rownumber -1)
;i know that initially r17=0x01 refers to row 8 and each time it shifts and this means row decrease by 1
RJMP BYTEOFFSET
ADDBYTEOFFSET:
ADD ZL,R22 ;FIX LATER
;Load column data
LPM R20,Z
LDI R21,5
CLC
BlockColumnLoop:
CBI PORTB,3
ROR R20
BRCC ZEROCARRY
SBI PORTB,3 ;;CARRY NOT ZERO
ZEROCARRY: 
CBI PORTB,5
SBI PORTB,5
DEC R21
BRNE BlockColumnLoop
;When this is finished start with next block
DEC R18
BRNE BlockLoop

;send row data
LDI R18,8
CLC
ROR_LOOP8:
CBI PORTB,3
ROR R17
BRCC CARRYISZERO
CARRYISONE: SBI PORTB,3
CARRYISZERO:
CBI PORTB,5
SBI PORTB,5
DEC R18
BRNE ROR_LOOP8
RJMP DELAY
DISPLAY:
CBI PORTB,4
SBI PORTB,4
;here I sent a full row now complete
CBI PORTB,4
TST R17
BRNE AGAIN
ROL R17
AGAIN:RJMP SCREEN


Chartable:
.db 0b00000110, 0b00001110, 0b00000000, 0b00000100, 0b00000100, 0b00000100, 0b00000100, 0b00000000 ; alef
.db 0b00000000, 0b00000000, 0b00000000, 0b00010001, 0b00011111, 0b00000000, 0b00000100, 0b00000000 ; baa2
.db 0b00011111, 0b00000110, 0b00001000, 0b00010000, 0b00010010, 0b00001000, 0b00000111, 0b00000000 ; ja/jim
.db 0b00000000, 0b00000000, 0b00000000, 0b00000010, 0b00000010, 0b00001110, 0b00000000, 0b00000000 ; dal
.db 0b00000000, 0b00000000, 0b00000000, 0b00001110, 0b00001010, 0b00001110, 0b00000000, 0b00000000 ; haa
.db 0b00000111, 0b00000101, 0b00000111, 0b00000001, 0b00000001, 0b00000010, 0b00011100, 0b00000000 ; waaw
.db 0b00000000, 0b00000001, 0b00000000, 0b00000001, 0b00000001, 0b00000010, 0b00011100, 0b00000000 ; zaa
.db 0b00011111, 0b00000110, 0b00001000, 0b00010000, 0b00010000, 0b00001000, 0b00000111, 0b00000000 ; haa
.db 0b00000100, 0b00000100, 0b00000110, 0b00000101, 0b00001001, 0b00011110, 0b00000000, 0b00000000 ; tah
.db 0b00000111, 0b00010100, 0b00010010, 0b00010001, 0b00011111, 0b00000000, 0b00001100, 0b00000000 ; yaa
.db 0b00000001, 0b00000001, 0b00001101, 0b00011101, 0b00000001, 0b00010001, 0b00011111, 0b00000000 ; kaf
.db 0b00000001, 0b00000001, 0b00000001, 0b00000001, 0b00000001, 0b00010001, 0b00011111, 0b00000000 ; lam
.db 0b00000111, 0b00000101, 0b00001111, 0b00001000, 0b00001000, 0b00001000, 0b00001000, 0b00000000 ; mim
.db 0b00000000, 0b00000000, 0b00000100, 0b00010001, 0b00010001, 0b00011111, 0b00000000, 0b00000000 ; noon
.db 0b00000000, 0b00000000, 0b00000111, 0b00000101, 0b00010111, 0b00010001, 0b00011111, 0b00000000 ; fa
.db 0b00000110, 0b00000000, 0b00000111, 0b00000101, 0b00010111, 0b00010001, 0b00011111, 0b00000000 ; kaf

.db 0b00001111, 0b00000001, 0b00000001, 0b00001111, 0b00000001, 0b00000001, 0b00001111, 0b00000000  ;3
.db 0b00011111, 0b00010000, 0b00010000, 0b00011111, 0b00010000, 0b00010000, 0b00010000, 0b00000000  ;F
.db 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000  ;off
.db 0b00011111, 0b00010000, 0b00011110, 0b00000001, 0b00000001, 0b00000001, 0b00011110, 0b00000000  ;5
.db 0b00001111, 0b00001001, 0b00001001, 0b00001111, 0b00000001, 0b00000001, 0b00000001, 0b00000000  ;9
.db 0b00001111, 0b00001001, 0b00001001, 0b00001111, 0b00001001, 0b00001001, 0b00001111, 0b00000000  ;8
.db 0b00001111, 0b00000001, 0b00000001, 0b00000001, 0b00000001, 0b00000001, 0b00000001, 0b00000000  ;7
.db 0b00011111, 0b00010000, 0b00010000, 0b00011111, 0b00010000, 0b00010000, 0b00011111, 0b00000000  ;E
.db 0b00001111, 0b00001000, 0b00001000, 0b00001111, 0b00001001, 0b00001001, 0b00001111, 0b00000000  ;6
.db 0b00001111, 0b00001000, 0b00001000, 0b00001111, 0b00000001, 0b00000001, 0b00001111, 0b00000000  ;5
.db 0b00001111, 0b00000001, 0b00000001, 0b00001111, 0b00000001, 0b00000001, 0b00001111, 0b00000000  ;3
.db 0b00001111, 0b00001000, 0b00001000, 0b00001111, 0b00000001, 0b00000001, 0b00001111, 0b00000000  ;5
.db 0b00001111, 0b00001001, 0b00001001, 0b00001111, 0b00000001, 0b00000001, 0b00000001, 0b00000000  ;9
.db 0b00001111, 0b00001000, 0b00001000, 0b00001111, 0b00000001, 0b00000001, 0b00001111, 0b00000000  ;5
.db 0b00001111, 0b00001001, 0b00001001, 0b00001111, 0b00000001, 0b00000001, 0b00000001, 0b00000000  ;9
.db 0b00001111, 0b00001000, 0b00001000, 0b00001111, 0b00000001, 0b00000001, 0b00001111, 0b00000000  ;5
.db 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000
;arabic
.db 0b00000110, 0b00001110, 0b00000000, 0b00000100, 0b00000100, 0b00000100, 0b00000100, 0b00000000 ; alef
.db 0b00000000, 0b00000000, 0b00000000, 0b00010001, 0b00011111, 0b00000000, 0b00000100, 0b00000000 ; baa2
.db 0b00011111, 0b00000110, 0b00001000, 0b00010000, 0b00010010, 0b00001000, 0b00000111, 0b00000000 ; ja/jim
.db 0b00000000, 0b00000000, 0b00000000, 0b00000010, 0b00000010, 0b00001110, 0b00000000, 0b00000000 ; dal
.db 0b00000000, 0b00000000, 0b00000000, 0b00001110, 0b00001010, 0b00001110, 0b00000000, 0b00000000 ; haa
.db 0b00000111, 0b00000101, 0b00000111, 0b00000001, 0b00000001, 0b00000010, 0b00011100, 0b00000000 ; waaw
.db 0b00000000, 0b00000001, 0b00000000, 0b00000001, 0b00000001, 0b00000010, 0b00011100, 0b00000000 ; zaa
.db 0b00011111, 0b00000110, 0b00001000, 0b00010000, 0b00010000, 0b00001000, 0b00000111, 0b00000000 ; haa
.db 0b00000100, 0b00000100, 0b00000110, 0b00000101, 0b00001001, 0b00011110, 0b00000000, 0b00000000 ; tah
.db 0b00000111, 0b00010100, 0b00010010, 0b00010001, 0b00011111, 0b00000000, 0b00001100, 0b00000000 ; yaa
.db 0b00000001, 0b00000001, 0b00001101, 0b00011101, 0b00000001, 0b00010001, 0b00011111, 0b00000000 ; kaf
.db 0b00000001, 0b00000001, 0b00000001, 0b00000001, 0b00000001, 0b00010001, 0b00011111, 0b00000000 ; lam
.db 0b00000111, 0b00000101, 0b00001111, 0b00001000, 0b00001000, 0b00001000, 0b00001000, 0b00000000 ; mim
.db 0b00000000, 0b00000000, 0b00000100, 0b00010001, 0b00010001, 0b00011111, 0b00000000, 0b00000000 ; noon
.db 0b00000000, 0b00000000, 0b00000111, 0b00000101, 0b00010111, 0b00010001, 0b00011111, 0b00000000 ; fa
.db 0b00000110, 0b00000000, 0b00000111, 0b00000101, 0b00010111, 0b00010001, 0b00011111, 0b00000000 ; kaf








BYTEOFFSET:
CPI R17,1
BRNE MESH7
LDI R22,7 ;BYTE OFFSET
RJMP ADDBYTEOFFSET

MESH7:
CPI R17,2
BRNE MESH6
LDI R22,6 ;BYTE OFFSET
RJMP ADDBYTEOFFSET

MESH6:
CPI R17,4
BRNE MESH5
LDI R22,5 ;BYTE OFFSET
RJMP ADDBYTEOFFSET

MESH5:
CPI R17,8
BRNE MESH4
LDI R22,4 ;BYTE OFFSET
RJMP ADDBYTEOFFSET

MESH4:
CPI R17,16
BRNE MESH3
LDI R22,3 ;BYTE OFFSET
RJMP ADDBYTEOFFSET

MESH3:
CPI R17,32
BRNE MESH2
LDI R22,2 ;BYTE OFFSET
RJMP ADDBYTEOFFSET

MESH2:
CPI R17,64
BRNE MESH1
LDI R22,1 ;BYTE OFFSET
RJMP ADDBYTEOFFSET

MESH1:
LDI R22,0 ;BYTE OFFSET
RJMP ADDBYTEOFFSET




DELAY:
LDI R20,0X6B
D1:
LDI R21,0X6B
D2:
DEC R21
BRNE D2
DEC R20
BRNE D1
RJMP DISPLAY
